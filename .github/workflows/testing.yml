name: Test Suite

on:
  push:
    branches: [master]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        pip install -r requirements.txt
        pip install .
    - name: Test with pytest
      run: |
        pytest --cov-report term-missing              \
               --cov=restfly tests                    \
               --cov-report xml:reports/cov-${{ matrix.python-version }}.xml
    - name: Save Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: reports
        path: reports
        retention-days: 1

  linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - run: |
        python -m pip install --upgrade pip
        pip install -r test-requirements.txt
        pip install -r requirements.txt
        pip install .
    - name: Linting with Flake8
      run: |
        flake8 restfly                \
               --count                \
               --select=E9,F63,F7,F82 \
               --show-source          \
               --statistics
        flake8 restfly                \
               --count                \
               --exit-zero            \
               --max-complexity=10    \
               --max-line-length=79   \
               --statistics           \
               --output-file=reports/flake8.txt
    - name: Save Flake8 Report
      uses: actions/upload-artifact@v2
      with:
        name: reports
        path: reports
        retention-days: 1

  sonarcloud:
    runs-on: ubuntu-latest
    needs: [unit_tests, linting]
    steps:
      - uses: actions/checkout@v2
      - name: Download Coverage Report
        uses: actions/download-artifact@v4.1.7
        with:
          name: reports
          path: reports
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
